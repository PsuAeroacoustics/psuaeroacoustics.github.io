# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Docs
        uses: actions/checkout@v3
      - name: Checkout OpenCOPTER
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'PsuAeroacoustics/OpenCOPTER'
          submodules: 'recursive'
          path: 'OpenCOPTER'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: dlang-community/setup-dlang@4c99aa991ce7d19dd3064de0a4f2f6b2f152e2d7
        with:
          compiler: ldc-latest
      - name: Install Dependencies
        run: |
          sudo apt-get install -y libopenblas-dev liblapack-dev liblapacke-dev
          BASE=$PWD
          cd ~/
          wget https://github.com/shibatch/sleef/archive/refs/tags/3.5.1.tar.gz
          echo Extracting sleef tarball
          tar xf 3.5.1.tar.gz
          cd sleef-3.5.1
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
          make
          sudo make install
          cd $BASE
      - name: 'Build OpenCOPTER'
        run: |
          cd OpenCOPTER
          # Build the project, with its main file included, without unittests
          dub build -c library-python310-novtk -b release --compiler=$DC

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - uses: ammaraskar/sphinx-action@master
        with:
          pre-build-command: "pip3 install sphinx-rtd-theme && pip3 install sphinxcontrib-bibtex && pip3 install sphinxcontrib-numfig && pip3 install sphinx-numfig"
          build-command: "sphinx-build -b html . _build -a"
          docs-folder: "./OpenCOPTER/pyhtml/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './OpenCOPTER/pyhtml/_build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
